<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlockOfAtPositionWillBeCopiedFromNoMatterChecksum" xml:space="preserve">
    <value>Blok file "{0}" pada posisi {1} disalin dari "{2}" meskipun checksum menunjukkan bahwa blok tersebut salah</value>
  </data>
  <data name="BlockOfAtPositionWillBeRestoredFrom" xml:space="preserve">
    <value>Blok file "{0}" pada posisi {1} dipulihkan dari posisi yang sama pada file "{2}".</value>
  </data>
  <data name="BlocksOfAndAtPositionNonRecoverableFillDummy" xml:space="preserve">
    <value>Blok file "{0}" dan "{1}" pada posisi {2} tidak dapat dipulihkan dan akan diisi dengan blok kosong</value>
  </data>
  <data name="ChecksumOfBlockAtOffsetNotOK" xml:space="preserve">
    <value>{0}: Checksum blok pada posisi {1} tidak OK</value>
  </data>
  <data name="CopiedFromToReason" xml:space="preserve">
    <value>Penyalinan selesai: “{0}” ke “{1}” {2}</value>
  </data>
  <data name="CouldntUseOutdatedFileForRestoringOther" xml:space="preserve">
    <value>Peringatan: File "{0}" dengan tahun 1975 atau sebelumnya tidak dapat digunakan untuk memulihkan file "{1}". Tanggal lama tersebut menunjukkan bahwa ini adalah kesempatan terakhir untuk memulihkan file “{0}”.</value>
  </data>
  <data name="DefaultCulture" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="DeletedFileNotPresentIn" xml:space="preserve">
    <value>File “{0}” yang dihapus dan tidak ada lagi di “{1}”.</value>
  </data>
  <data name="DeletedFolder" xml:space="preserve">
    <value>Folder “{0}” termasuk isinya dihapus karena “{1}” sudah tidak ada lagi</value>
  </data>
  <data name="EncounteredErrorOlderOk" xml:space="preserve">
    <value>Peringatan: Terjadi kesalahan I/O saat menyalin file "{0}". File lama “{1}” tampaknya baik-baik saja</value>
  </data>
  <data name="EncounteredErrorOtherBadToo" xml:space="preserve">
    <value>Peringatan: Terjadi kesalahan I/O saat menyalin file "{0}". File lain “{1}” juga mengalami kesalahan atau merupakan produk pemulihan pada kesempatan terakhir. Mencoba memperbaiki “{0}” secara otomatis.</value>
  </data>
  <data name="EncounteredErrorWhileCopyingTryingToRepair" xml:space="preserve">
    <value>Peringatan: Terjadi kesalahan saat menyalin file “{0}”. Saya mencoba memperbaiki kesalahan tersebut.</value>
  </data>
  <data name="ErrorDeleting" xml:space="preserve">
    <value>Terjadi kesalahan saat menghapus berkas "{0}": {1}</value>
  </data>
  <data name="ErrorProcessinngFilePair" xml:space="preserve">
    <value>Terjadi kesalahan saat memproses pasangan file "{0}" dan "{1}": {2}</value>
  </data>
  <data name="ErrorReadingPositionWillFillWithDummy" xml:space="preserve">
    <value>Kesalahan membaca file "{0}" pada posisi {1}: {2}. Blok diisi dengan angka nol</value>
  </data>
  <data name="ErrorWhileTestingFile" xml:space="preserve">
    <value>File pengujian kesalahan "{0}"</value>
  </data>
  <data name="FileCopied" xml:space="preserve">
    <value>Penyalinan selesai: “{0}” ke “{1}” {2}</value>
  </data>
  <data name="FileHasDifferentTime" xml:space="preserve">
    <value>(File memiliki tanggal atau panjang yang berbeda)</value>
  </data>
  <data name="FileHasZeroLength" xml:space="preserve">
    <value>Peringatan: Panjang file nol, menunjukkan operasi penyalinan yang gagal di masa lalu: "{0}"</value>
  </data>
  <data name="FileHealthyOrRepaired" xml:space="preserve">
    <value>(File bebas kesalahan atau diperbaiki)</value>
  </data>
  <data name="FilesHaveZeroLength" xml:space="preserve">
    <value>Peringatan: Kedua file memiliki panjang nol, yang menunjukkan operasi penyalinan yang gagal di masa lalu: "{0}" dan "{1}" </value>
  </data>
  <data name="FileWasHealthy" xml:space="preserve">
    <value>(File bebas dari kesalahan)</value>
  </data>
  <data name="FileWasNew" xml:space="preserve">
    <value>(file masih baru)</value>
  </data>
  <data name="FileWasNewer" xml:space="preserve">
    <value>(file lebih baru atau lebih besar)</value>
  </data>
  <data name="FillingNotRecoverableAtOffsetOfCopyWithDummy" xml:space="preserve">
    <value>Blok yang tidak dapat dipulihkan pada posisi {0} dari file yang disalin "{1}" diisi dengan angka nol</value>
  </data>
  <data name="FillingNotRecoverableAtOffsetWithDummy" xml:space="preserve">
    <value>Blok yang tidak dapat dipulihkan pada posisi {0} diisi dengan angka nol</value>
  </data>
  <data name="FirstFileHasBadBlocks" xml:space="preserve">
    <value>Peringatan: File pertama "{0}" memiliki blok buruk. Penimpaan berkas "{1}" dilewati dan membiarkannya sebagai cadangan</value>
  </data>
  <data name="FoundFileForSync" xml:space="preserve">
    <value>Menemukan file untuk kemungkinan sinkronisasi</value>
  </data>
  <data name="FoundFilesForSync" xml:space="preserve">
    <value>{0} file ditemukan untuk kemungkinan sinkronisasi</value>
  </data>
  <data name="InternalErrorCouldntRestoreAny" xml:space="preserve">
    <value>Kesalahan internal: Salinan file, baik "{0}" maupun "{1}", tidak dapat dipulihkan </value>
  </data>
  <data name="IOErrorDuringRepairCopyOf" xml:space="preserve">
    <value>Kesalahan I/O saat memperbaiki penyalinan ke file: "{0}": {1}</value>
  </data>
  <data name="IOErrorReadingFile" xml:space="preserve">
    <value>File pembacaan kesalahan I/O “{0}”: {1}</value>
  </data>
  <data name="IOErrorReadingFileOffset" xml:space="preserve">
    <value>File pembacaan kesalahan I/O: “{0}” pada posisi {1}: {2}</value>
  </data>
  <data name="IOErrorWhileReadingPositionFillDummyWhileCopy" xml:space="preserve">
    <value>Kesalahan I/O saat membaca file "{0}" di lokasi {1}: {2}. Blok tersebut digantikan oleh blok kosong saat disalin.</value>
  </data>
  <data name="IOErrorWritingFile" xml:space="preserve">
    <value>File penulisan kesalahan I/O “{0}”: {1}</value>
  </data>
  <data name="KeepingReadableButNotRecoverableBlockAtOffset" xml:space="preserve">
    <value>Blok yang dapat dibaca namun tidak dapat dipulihkan pada posisi {0} tetap ada. Checksum menunjukkan bahwa blok tersebut salah</value>
  </data>
  <data name="KeepingReadableNonRecovBBlockAtAlsoInCopy" xml:space="preserve">
    <value>Blok yang dapat dibaca namun tidak dapat dipulihkan pada posisi {0} dari berkas asli "{1}" juga tetap ada dalam salinan "{2}". Checksum menunjukkan bahwa blok tersebut salah</value>
  </data>
  <data name="LogFileName" xml:space="preserve">
    <value>Sinkronisasi log direktori bahasa Indonesia</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Laporan proses penyalinan</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>TIDAK</value>
  </data>
  <data name="OperationCanceled" xml:space="preserve">
    <value>Proses dibatalkan</value>
  </data>
  <data name="OperationFinished" xml:space="preserve">
    <value>Proses berakhir</value>
  </data>
  <data name="OutOfBadBlocksNotRestoredInCopyBytes" xml:space="preserve">
    <value>Dari {0} blok buruk dalam berkas asli, {2} byte tidak dipulihkan dalam salinan "{1}".</value>
  </data>
  <data name="ProcessNo" xml:space="preserve">
    <value>№</value>
  </data>
  <data name="RecoveringBlockAtOfCopiedFile" xml:space="preserve">
    <value>Blokir pada posisi {0} dari file target yang disalin “{1}” dipulihkan</value>
  </data>
  <data name="RecoveringBlockAtOffsetOfFile" xml:space="preserve">
    <value>Blokir pada posisi {0} berkas "{1}" dipulihkan.</value>
  </data>
  <data name="RightToLeft" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="RunningWithoutRepairOptionUndecided" xml:space="preserve">
    <value>Sinkronisasi berjalan tanpa opsi perbaikan sehingga tidak dapat memutuskan apakah berkas "{0}" dapat dipulihkan menggunakan "{1}".</value>
  </data>
  <data name="SavedInfoFileCantBeUsedForTesting" xml:space="preserve">
    <value>File info yang disimpan "{0}" tidak dapat digunakan untuk menguji file "{1}": file tersebut dibuat untuk versi file "{0}" yang berbeda.</value>
  </data>
  <data name="SavedInfoHasBeenDamagedNeedsRecreation" xml:space="preserve">
    <value>File info yang disimpan “{0}” rusak dan perlu dibuat ulang dari “{1}”.</value>
  </data>
  <data name="SecondFolderNoDelete" xml:space="preserve">
    <value>Kesalahan: Folder kedua berisi file "{0}". Folder yang dipilih tampaknya salah untuk opsi hapus. Pemrosesan folder dan subfolder dilewati.</value>
  </data>
  <data name="SkippingFilePairDontDelete" xml:space="preserve">
    <value>Pasangan file “{0}” dan “{1}” dilewati. File khusus mencegah penggunaan opsi hapus di folder root yang salah. </value>
  </data>
  <data name="TheFileCantBeModifiedMissingRepairApplyToCopy" xml:space="preserve">
    <value>File tidak dapat dimodifikasi karena kurangnya opsi perbaikan. Proses pemulihan diterapkan pada salinan.</value>
  </data>
  <data name="ThereAreBadBlocksInFileNonRestorableParts" xml:space="preserve">
    <value>Ada {0} blok buruk dalam file "{1}", bagian yang tidak dapat dipulihkan: {2} byte.</value>
  </data>
  <data name="ThereAreBadBlocksInNonRestorableMayRetryLater" xml:space="preserve">
    <value>Ada {0} blok buruk dalam file "{1}", bagian yang tidak dapat dipulihkan: {2} byte. Proses tidak dapat dilanjutkan karena tidak dapat dipulihkan.  Mungkin bisa dicoba lagi nanti.</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableCantBeBackup" xml:space="preserve">
    <value>Ada {0} blok buruk dalam file "{1}", bagian yang tidak dapat dipulihkan: {2} byte. File tidak dapat digunakan sebagai cadangan</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableOnlyTested" xml:space="preserve">
    <value>Ada {0} blok buruk dalam file "{1}", bagian yang tidak dapat dipulihkan: {2} byte. File tetap tidak berubah, baru saja diuji</value>
  </data>
  <data name="ThereIsBadBlockInFileNonRestorableParts" xml:space="preserve">
    <value>Ada blok buruk di file "{0}", bagian yang tidak dapat dipulihkan: {1} byte.</value>
  </data>
  <data name="ThereIsBadBlockNonRestorableCantBeBackup" xml:space="preserve">
    <value>Ada blok buruk di file "{0}" yang tidak dapat dipulihkan: {1} byte. File tidak dapat digunakan sebagai cadangan </value>
  </data>
  <data name="ThereIsOneBadBlockNonRestorableOnlyTested" xml:space="preserve">
    <value>Ada blok buruk di file "{0}", bagian yang tidak dapat dipulihkan: {1} byte. File tetap tidak berubah, baru saja diuji</value>
  </data>
  <data name="ThereRemainBadBlocksInBecauseReadOnly" xml:space="preserve">
    <value>{0} blok buruk tetap berada di "{1}" karena berkas tidak dapat diubah</value>
  </data>
  <data name="ThereWasBadBlockInFileNotRestoredParts" xml:space="preserve">
    <value>Ada blok buruk di file "{0}", bagian yang belum dipulihkan: {1} byte</value>
  </data>
  <data name="ThereWasBadBlockNotRestoredInCopyBytes" xml:space="preserve">
    <value>Ada blok buruk di berkas asli, bagian yang belum dipulihkan di salinan "{0}": {1} byte.</value>
  </data>
  <data name="ThereWereBadBlocksInFileNotRestoredParts" xml:space="preserve">
    <value>Ada {0} blok buruk dalam file "{1}", bagian yang belum dipulihkan: {2} byte</value>
  </data>
  <data name="ThisIsASimulatedIOErrorAtPosition" xml:space="preserve">
    <value>Ini adalah simulasi kesalahan I/O di lokasi {0}</value>
  </data>
  <data name="WarningChecksumOffsetPrimarySavedInfoIgnored" xml:space="preserve">
    <value>Peringatan: Checksum blok pada posisi {0} tidak cocok dengan blok utama yang tersedia dari informasi tersimpan "{1}". Informasi utama yang disimpan untuk blok tersebut diabaikan</value>
  </data>
  <data name="WarningChecksumOffsetSecondarySavedInfoIgnored" xml:space="preserve">
    <value>Peringatan: Checksum blok pada posisi {0} tidak cocok dengan blok sekunder yang tersedia dari informasi tersimpan "{1}". Informasi sekunder yang disimpan untuk blok tersebut diabaikan</value>
  </data>
  <data name="WarningCopiedToWithErrors" xml:space="preserve">
    <value>Peringatan: “{0}” disalin ke “{1}” dengan kesalahan {2} </value>
  </data>
  <data name="WarningIOErrorWhileCopyingToReason" xml:space="preserve">
    <value>Peringatan: Kesalahan I/O saat menyalin file "{0}" ke "{1}": {2}</value>
  </data>
  <data name="WarningSeveralBlocksDontMatchInSIWillBeIgnored" xml:space="preserve">
    <value>Peringatan: Beberapa blok tidak cocok dengan informasi yang disimpan "{0}". Informasi yang disimpan diabaikan sepenuhnya</value>
  </data>
  <data name="WarningWhileCreating" xml:space="preserve">
    <value>Peringatan: {0} saat membuat berkas "{1}"</value>
  </data>
  <data name="WarningWhileDiscoveringIfNeedsToBeRechecked" xml:space="preserve">
    <value>Peringatan: {0} saat menentukan apakah "{1}" perlu diperiksa ulang. </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ya</value>
  </data>
  <data name="DeletingObsoleteSavedInfos" xml:space="preserve">
    <value>Saya akan menghapus informasi tersimpan lama yang sudah usang....</value>
  </data>
  <data name="ScanningFolders" xml:space="preserve">
    <value>Saya mencari folder dan file untuk disinkronkan...</value>
  </data>
</root>