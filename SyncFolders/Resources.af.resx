<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultCulture" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="FoundFilesForSync" xml:space="preserve">
    <value>{0} lêers gevind vir moontlike sinchronisasie</value>
  </data>
  <data name="InternalErrorCouldntRestoreAny" xml:space="preserve">
    <value>Interne fout: 'n Afskrif van die lêers, nóg "{0}" nóg "{1}", kon herstel word </value>
  </data>
  <data name="IOErrorDuringRepairCopyOf" xml:space="preserve">
    <value>I/O-fout tydens die herstel van kopie na lêer: "{0}": {1}</value>
  </data>
  <data name="IOErrorReadingFile" xml:space="preserve">
    <value>I/O-fout lees lêer "{0}": {1}</value>
  </data>
  <data name="IOErrorReadingFileOffset" xml:space="preserve">
    <value>I/O-fout lees lêer: "{0}" by posisie {1}: {2}</value>
  </data>
  <data name="IOErrorWhileReadingPositionFillDummyWhileCopy" xml:space="preserve">
    <value>I/O-fout lees lêer "{0}" by ligging {1}: {2}. Die blok word vervang deur 'n leë blok wanneer dit gekopieer word.</value>
  </data>
  <data name="IOErrorWritingFile" xml:space="preserve">
    <value>I/O-fout met skryf van lêer "{0}": {1}</value>
  </data>
  <data name="KeepingReadableButNotRecoverableBlockAtOffset" xml:space="preserve">
    <value>Die leesbare maar onherstelbare blokkie by posisie {0} bly. Die kontrolesom dui aan dat die blok verkeerd is</value>
  </data>
  <data name="KeepingReadableNonRecovBBlockAtAlsoInCopy" xml:space="preserve">
    <value>Die leesbare maar onherstelbare blok by posisie {0} van die oorspronklike lêer "{1}" bly ook in die kopie "{2}". Die kontrolesom dui aan dat die blok verkeerd is</value>
  </data>
  <data name="LogFileName" xml:space="preserve">
    <value>Gidse Sinchronisasie Log Afrikaans</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Verslag van die kopiëringsproses</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>nee</value>
  </data>
  <data name="OperationCanceled" xml:space="preserve">
    <value>Proses gestop</value>
  </data>
  <data name="OperationFinished" xml:space="preserve">
    <value>Proses geëindig</value>
  </data>
  <data name="OutOfBadBlocksNotRestoredInCopyBytes" xml:space="preserve">
    <value>Van {0} slegte blokke in die oorspronklike lêer, is {2} grepe nie in die kopie "{1}" herwin nie.</value>
  </data>
  <data name="ProcessNo" xml:space="preserve">
    <value>№</value>
  </data>
  <data name="RecoveringBlockAtOfCopiedFile" xml:space="preserve">
    <value>Blok by posisie {0} van die gekopieerde teikenlêer "{1}" is herstel</value>
  </data>
  <data name="RecoveringBlockAtOffsetOfFile" xml:space="preserve">
    <value>Blok by posisie {0} van lêer "{1}" is herstel.</value>
  </data>
  <data name="RightToLeft" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="RunningWithoutRepairOptionUndecided" xml:space="preserve">
    <value>Sinkronisering loop sonder 'n herstelopsie en kon dus nie besluit of die lêer "{0}" met "{1}" herstel kan word nie.</value>
  </data>
  <data name="SavedInfoFileCantBeUsedForTesting" xml:space="preserve">
    <value>Die gestoorde inligtinglêer "{0}" kan nie gebruik word om die lêer "{1}" te toets nie: dit is geskep vir 'n ander weergawe van die lêer "{0}".</value>
  </data>
  <data name="SavedInfoHasBeenDamagedNeedsRecreation" xml:space="preserve">
    <value>Die gestoorde inligtinglêer "{0}" is beskadig en moet herskep word vanaf "{1}".</value>
  </data>
  <data name="SecondFolderNoDelete" xml:space="preserve">
    <value>Fout: Die tweede vouer bevat die lêer "{0}". Die geselekteerde vouer blyk verkeerd te wees vir die uitvee-opsie. Verwerking van die gids en subgidse word oorgeslaan.</value>
  </data>
  <data name="SkippingFilePairDontDelete" xml:space="preserve">
    <value>Lêerpaar "{0}" en "{1}" word oorgeslaan. 'n Spesiale lêer verhoed die gebruik van die uitvee-opsie in die verkeerde wortelgids. </value>
  </data>
  <data name="TheFileCantBeModifiedMissingRepairApplyToCopy" xml:space="preserve">
    <value>Die lêer kan nie gewysig word nie weens die gebrek aan 'n herstelopsie. Die herstelproses word op die kopie toegepas.</value>
  </data>
  <data name="ThereAreBadBlocksInFileNonRestorableParts" xml:space="preserve">
    <value>Daar is {0} slegte blokke in lêer "{1}", onherstelbare dele: {2} grepe.</value>
  </data>
  <data name="ThereAreBadBlocksInNonRestorableMayRetryLater" xml:space="preserve">
    <value>Daar is {0} slegte blokke in lêer "{1}", onherstelbare dele: {2} grepe. Die proses kan nie voortgaan nie weens onherstelbaarheid.  Dit kan later weer probeer word.</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableCantBeBackup" xml:space="preserve">
    <value>Daar is {0} slegte blokke in lêer "{1}", onherstelbare dele: {2} grepe. Lêer kan nie as rugsteun gebruik word nie</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableOnlyTested" xml:space="preserve">
    <value>Daar is {0} slegte blokke in lêer "{1}", onherstelbare dele: {2} grepe. Lêer bly onveranderd, dit is pas getoets</value>
  </data>
  <data name="ThereIsBadBlockInFileNonRestorableParts" xml:space="preserve">
    <value>Daar is 'n slegte blok in lêer "{0}", onherstelbare dele: {1} grepe.</value>
  </data>
  <data name="ThereIsBadBlockNonRestorableCantBeBackup" xml:space="preserve">
    <value>Daar is 'n slegte blok in lêer "{0}" wat nie herwin kan word nie: {1} grepe. Lêer kan nie as rugsteun gebruik word nie </value>
  </data>
  <data name="ThereIsOneBadBlockNonRestorableOnlyTested" xml:space="preserve">
    <value>Daar is 'n slegte blok in lêer "{0}", onherstelbare dele: {1} grepe. Die lêer bly onveranderd, dit is pas getoets</value>
  </data>
  <data name="ThereRemainBadBlocksInBecauseReadOnly" xml:space="preserve">
    <value>{0} slegte blokke bly in "{1}" omdat die lêer nie gewysig kan word nie</value>
  </data>
  <data name="ThereWasBadBlockInFileNotRestoredParts" xml:space="preserve">
    <value>Daar was 'n slegte blok in lêer "{0}", onherstelde dele: {1} grepe</value>
  </data>
  <data name="ThereWasBadBlockNotRestoredInCopyBytes" xml:space="preserve">
    <value>Daar was 'n slegte blok in die oorspronklike lêer, onherstelde dele in die kopie "{0}": {1} grepe.</value>
  </data>
  <data name="ThereWereBadBlocksInFileNotRestoredParts" xml:space="preserve">
    <value>Daar was {0} slegte blokke in lêer "{1}", onherstelde dele: {2} grepe</value>
  </data>
  <data name="ThisIsASimulatedIOErrorAtPosition" xml:space="preserve">
    <value>Dit is 'n gesimuleerde I/O-fout by ligging {0}</value>
  </data>
  <data name="WarningChecksumOffsetPrimarySavedInfoIgnored" xml:space="preserve">
    <value>Waarskuwing: Die kontrolesom van die blok by posisie {0} stem nie ooreen met die beskikbare primêre blokke gestoorde inligting "{1}" nie. Die primêre gestoor inligting vir die blok word geïgnoreer</value>
  </data>
  <data name="WarningChecksumOffsetSecondarySavedInfoIgnored" xml:space="preserve">
    <value>Waarskuwing: Die kontrolesom van die blok by posisie {0} stem nie ooreen met die beskikbare sekondêre blokke gestoorde inligting "{1}" nie. Sekondêre gestoorde inligting vir die blok word geïgnoreer</value>
  </data>
  <data name="WarningCopiedToWithErrors" xml:space="preserve">
    <value>Waarskuwing: "{0}" is na "{1}" gekopieer met foute {2} </value>
  </data>
  <data name="WarningIOErrorWhileCopyingToReason" xml:space="preserve">
    <value>Waarskuwing: I/O-fout tydens die kopiëring van lêer "{0}" na "{1}": {2}</value>
  </data>
  <data name="WarningSeveralBlocksDontMatchInSIWillBeIgnored" xml:space="preserve">
    <value>Waarskuwing: Veelvuldige blokke pas nie by gestoorde inligting "{0}" nie. Die gestoorde inligting word heeltemal geïgnoreer</value>
  </data>
  <data name="WarningWhileCreating" xml:space="preserve">
    <value>Waarskuwing: {0} terwyl lêer "{1}" geskep word</value>
  </data>
  <data name="WarningWhileDiscoveringIfNeedsToBeRechecked" xml:space="preserve">
    <value>Waarskuwing: {0} terwyl bepaal word of "{1}" herkontroleer moet word. </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="DeletingObsoleteSavedInfos" xml:space="preserve">
    <value>Ek vee ou gestoorde data uit wat verval het...</value>
  </data>
  <data name="ScanningFolders" xml:space="preserve">
    <value>Ek soek vouers en lêers om te sinkroniseer...</value>
  </data>
</root>