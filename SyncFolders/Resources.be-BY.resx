<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlockOfAtPositionWillBeCopiedFromNoMatterChecksum" xml:space="preserve">
    <value>Блок файла "{0}" у пазіцыі {1} капіюецца з "{2}", нават калі кантрольная сума паказвае, што блок няправільны</value>
  </data>
  <data name="BlockOfAtPositionWillBeRestoredFrom" xml:space="preserve">
    <value>Блок файла "{0}" у пазіцыі {1} аднаўляецца з той самай пазіцыі файла "{2}".</value>
  </data>
  <data name="BlocksOfAndAtPositionNonRecoverableFillDummy" xml:space="preserve">
    <value>Блокі файлаў "{0}" і "{1}" у пазіцыі {2} не могуць быць адноўлены і будуць запоўнены пустым блокам</value>
  </data>
  <data name="ChecksumOfBlockAtOffsetNotOK" xml:space="preserve">
    <value>{0}: кантрольная сума блока ў пазіцыі {1} няправільная</value>
  </data>
  <data name="CopiedFromToReason" xml:space="preserve">
    <value>Капіраванне завершана: “{0}” у “{1}” {2}</value>
  </data>
  <data name="CouldntUseOutdatedFileForRestoringOther" xml:space="preserve">
    <value>Папярэджанне: файл "{0}" з годам 1975 або раней не можа быць выкарыстаны для аднаўлення файла "{1}". Такая старая дата азначае, што гэта была апошняя магчымасць аднавіць файл «{0}».</value>
  </data>
  <data name="DefaultCulture" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="DeletedFileNotPresentIn" xml:space="preserve">
    <value>Выдалены файл “{0}”, які больш не існуе ў “{1}”.</value>
  </data>
  <data name="DeletedFolder" xml:space="preserve">
    <value>Папка «{0}», уключаючы змесціва, выдалена, таму што «{1}» больш не існуе</value>
  </data>
  <data name="EncounteredErrorOlderOk" xml:space="preserve">
    <value>Увага: падчас капіравання файла "{0}" адбылася памылка ўводу-вываду. Старэйшы файл “{1}” выглядае ў парадку</value>
  </data>
  <data name="EncounteredErrorOtherBadToo" xml:space="preserve">
    <value>Увага: падчас капіравання файла "{0}" адбылася памылка ўводу-вываду. Іншы файл «{1}» таксама мае памылкі або з'яўляецца прадуктам апошняга шанцу аднаўлення. Спроба аўтаматычна аднавіць “{0}”.</value>
  </data>
  <data name="EncounteredErrorWhileCopyingTryingToRepair" xml:space="preserve">
    <value>Увага: падчас капіравання файла “{0}” адбылася памылка. Я спрабую выправіць памылку.</value>
  </data>
  <data name="ErrorDeleting" xml:space="preserve">
    <value>Памылка пры выдаленні файла "{0}": {1}</value>
  </data>
  <data name="ErrorProcessinngFilePair" xml:space="preserve">
    <value>Памылка апрацоўкі файлавай пары "{0}" і "{1}": {2}</value>
  </data>
  <data name="ErrorReadingPositionWillFillWithDummy" xml:space="preserve">
    <value>Памылка чытання файла "{0}" у пазіцыі {1}: {2}. Блок запаўняецца нулямі</value>
  </data>
  <data name="ErrorWhileTestingFile" xml:space="preserve">
    <value>Памылка тэставання файла "{0}"</value>
  </data>
  <data name="FileCopied" xml:space="preserve">
    <value>Капіраванне завершана: “{0}” у “{1}” {2}</value>
  </data>
  <data name="FileHasDifferentTime" xml:space="preserve">
    <value>(Файл мае іншую дату або даўжыню)</value>
  </data>
  <data name="FileHasZeroLength" xml:space="preserve">
    <value>Папярэджанне: файл мае нулявую даўжыню, што паказвае на няўдалую аперацыю капіравання ў мінулым: "{0}"</value>
  </data>
  <data name="FileHealthyOrRepaired" xml:space="preserve">
    <value>(Файл быў без памылак або адрамантаваны)</value>
  </data>
  <data name="FilesHaveZeroLength" xml:space="preserve">
    <value>Папярэджанне: абодва файлы маюць нулявую даўжыню, што паказвае на няўдалую аперацыю капіравання ў мінулым: "{0}" і "{1}" </value>
  </data>
  <data name="FileWasHealthy" xml:space="preserve">
    <value>(Файл быў без памылак)</value>
  </data>
  <data name="FileWasNew" xml:space="preserve">
    <value>(файл быў новы)</value>
  </data>
  <data name="FileWasNewer" xml:space="preserve">
    <value>(Файл быў навейшы або большы)</value>
  </data>
  <data name="FillingNotRecoverableAtOffsetOfCopyWithDummy" xml:space="preserve">
    <value>Неаднаўляльны блок у пазіцыі {0} скапіраванага файла "{1}" запоўнены нулямі</value>
  </data>
  <data name="FillingNotRecoverableAtOffsetWithDummy" xml:space="preserve">
    <value>Неаднаўляльны блок у пазіцыі {0} запоўнены нулямі</value>
  </data>
  <data name="FirstFileHasBadBlocks" xml:space="preserve">
    <value>Увага: першы файл "{0}" мае пашкоджаныя блокі. Перазапіс файла "{1}" быў прапушчаны, пакінуўшы яго ў якасці рэзервовай копіі</value>
  </data>
  <data name="FoundFileForSync" xml:space="preserve">
    <value>Знайшоў файл для магчымай сінхранізацыі</value>
  </data>
  <data name="FoundFilesForSync" xml:space="preserve">
    <value>Знойдзена файлаў для магчымай сінхранізацыі: {0}</value>
  </data>
  <data name="InternalErrorCouldntRestoreAny" xml:space="preserve">
    <value>Унутраная памылка: копія файлаў, ні "{0}", ні "{1}", не можа быць адноўлена </value>
  </data>
  <data name="IOErrorDuringRepairCopyOf" xml:space="preserve">
    <value>Памылка ўводу-вываду пры аднаўленні копіі ў файл: "{0}": {1}</value>
  </data>
  <data name="IOErrorReadingFile" xml:space="preserve">
    <value>Памылка ўводу-вываду пры чытанні файла “{0}”: {1}</value>
  </data>
  <data name="IOErrorReadingFileOffset" xml:space="preserve">
    <value>Памылка ўводу-вываду пры чытанні файла: “{0}” у пазіцыі {1}: {2}</value>
  </data>
  <data name="IOErrorWhileReadingPositionFillDummyWhileCopy" xml:space="preserve">
    <value>Памылка ўводу-вываду пры чытанні файла "{0}" у месцы {1}: {2}. Пры капіраванні блок замяняецца пустым блокам.</value>
  </data>
  <data name="IOErrorWritingFile" xml:space="preserve">
    <value>Памылка ўводу-вываду пры запісе файла “{0}”: {1}</value>
  </data>
  <data name="KeepingReadableButNotRecoverableBlockAtOffset" xml:space="preserve">
    <value>Чытальны, але невыпраўляльны блок у пазіцыі {0} застаецца. Кантрольная сума паказвае, што блок няправільны</value>
  </data>
  <data name="KeepingReadableNonRecovBBlockAtAlsoInCopy" xml:space="preserve">
    <value>Чытальны, але неаднаўляльны блок у пазіцыі {0} зыходнага файла "{1}" таксама застаецца ў копіі "{2}". Кантрольная сума паказвае, што блок няправільны</value>
  </data>
  <data name="LogFileName" xml:space="preserve">
    <value>Часопіс сінхранізацыі каталогаў па-беларуску</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Справаздача аб працэсе капіравання</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>няма</value>
  </data>
  <data name="OperationCanceled" xml:space="preserve">
    <value>Працэс спынены</value>
  </data>
  <data name="OperationFinished" xml:space="preserve">
    <value>Працэс завершаны</value>
  </data>
  <data name="OutOfBadBlocksNotRestoredInCopyBytes" xml:space="preserve">
    <value>З {0} пашкоджаных блокаў у зыходным файле {2} байт не былі адноўлены ў копіі "{1}".</value>
  </data>
  <data name="ProcessNo" xml:space="preserve">
    <value>№</value>
  </data>
  <data name="RecoveringBlockAtOfCopiedFile" xml:space="preserve">
    <value>Блок у пазіцыі {0} скапіраванага мэтавага файла «{1}» адноўлены</value>
  </data>
  <data name="RecoveringBlockAtOffsetOfFile" xml:space="preserve">
    <value>Блок у пазіцыі {0} файла "{1}" адноўлены.</value>
  </data>
  <data name="RightToLeft" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="RunningWithoutRepairOptionUndecided" xml:space="preserve">
    <value>Сінхранізацыя працуе без магчымасці аднаўлення і таму не можа вырашыць, ці можна аднавіць файл "{0}" з дапамогай "{1}".</value>
  </data>
  <data name="SavedInfoFileCantBeUsedForTesting" xml:space="preserve">
    <value>Захаваны інфармацыйны файл "{0}" нельга выкарыстоўваць для праверкі файла "{1}": ён быў створаны для іншай версіі файла "{0}".</value>
  </data>
  <data name="SavedInfoHasBeenDamagedNeedsRecreation" xml:space="preserve">
    <value>Захаваны інфармацыйны файл “{0}” быў пашкоджаны і яго трэба стварыць нанова з “{1}”.</value>
  </data>
  <data name="SecondFolderNoDelete" xml:space="preserve">
    <value>Памылка: другая папка змяшчае файл "{0}". Здаецца, выбраная папка не адпавядае параметру выдалення. Апрацоўка папкі і падтэчак прапускаецца.</value>
  </data>
  <data name="SkippingFilePairDontDelete" xml:space="preserve">
    <value>Пара файлаў “{0}” і “{1}” прапушчана. Спецыяльны файл прадухіляе выкарыстанне опцыі выдалення ў няправільнай каранёвай тэчцы. </value>
  </data>
  <data name="TheFileCantBeModifiedMissingRepairApplyToCopy" xml:space="preserve">
    <value>Файл не можа быць зменены з-за адсутнасці магчымасці аднаўлення. Працэс аднаўлення прымяняецца да копіі.</value>
  </data>
  <data name="ThereAreBadBlocksInFileNonRestorableParts" xml:space="preserve">
    <value>Ёсць {0} пашкоджаных блокаў у файле "{1}", невыпраўляльныя часткі: {2} байт.</value>
  </data>
  <data name="ThereAreBadBlocksInNonRestorableMayRetryLater" xml:space="preserve">
    <value>Ёсць {0} пашкоджаных блокаў у файле "{1}", невыпраўляльныя часткі: {2} байт. Працэс не можа працягвацца з-за немагчымасці аднаўлення.  Гэта можа быць паўторана пазней.</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableCantBeBackup" xml:space="preserve">
    <value>Ёсць {0} пашкоджаных блокаў у файле "{1}", невыпраўляльныя часткі: {2} байт. Файл нельга выкарыстоўваць у якасці рэзервовай копіі</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableOnlyTested" xml:space="preserve">
    <value>Ёсць {0} пашкоджаных блокаў у файле "{1}", невыпраўляльныя часткі: {2} байт. Файл застаецца без змен, ён толькі што быў пратэставаны</value>
  </data>
  <data name="ThereIsBadBlockInFileNonRestorableParts" xml:space="preserve">
    <value>Ёсць няспраўны блок у файле "{0}", часткі, якія нельга аднавіць: {1} байт.</value>
  </data>
  <data name="ThereIsBadBlockNonRestorableCantBeBackup" xml:space="preserve">
    <value>У файле "{0}" ёсць няспраўны блок, які немагчыма аднавіць: {1} байт. Файл нельга выкарыстоўваць у якасці рэзервовай копіі </value>
  </data>
  <data name="ThereIsOneBadBlockNonRestorableOnlyTested" xml:space="preserve">
    <value>Ёсць няспраўны блок у файле "{0}", часткі, якія нельга аднавіць: {1} байт. Файл застаецца без зменаў, ён толькі што быў пратэставаны</value>
  </data>
  <data name="ThereRemainBadBlocksInBecauseReadOnly" xml:space="preserve">
    <value>{0} пашкоджаных блокаў застаюцца ў "{1}", таму што файл не можа быць зменены</value>
  </data>
  <data name="ThereWasBadBlockInFileNotRestoredParts" xml:space="preserve">
    <value>Быў няспраўны блок у файле "{0}", неадноўленыя часткі: {1} байт</value>
  </data>
  <data name="ThereWasBadBlockNotRestoredInCopyBytes" xml:space="preserve">
    <value>Быў няспраўны блок у зыходным файле, неадноўленыя часткі ў копіі "{0}": {1} байт.</value>
  </data>
  <data name="ThereWereBadBlocksInFileNotRestoredParts" xml:space="preserve">
    <value>У файле "{1}" былі пашкоджаныя блокі ({0}), неадноўленыя часткі: {2} байтаў</value>
  </data>
  <data name="ThisIsASimulatedIOErrorAtPosition" xml:space="preserve">
    <value>Гэта змадэляваная памылка ўводу/вываду ў месцы {0}</value>
  </data>
  <data name="WarningChecksumOffsetPrimarySavedInfoIgnored" xml:space="preserve">
    <value>Папярэджанне: кантрольная сума блока ў пазіцыі {0} не супадае з даступнымі асноўнымі блокамі захаванай інфармацыі "{1}". Асноўная захаваная інфармацыя для блока ігнаруецца</value>
  </data>
  <data name="WarningChecksumOffsetSecondarySavedInfoIgnored" xml:space="preserve">
    <value>Папярэджанне: кантрольная сума блока ў пазіцыі {0} не супадае з даступнымі другаснымі блокамі захаванай інфармацыі "{1}". Другасная захаваная інфармацыя для блока ігнаруецца</value>
  </data>
  <data name="WarningCopiedToWithErrors" xml:space="preserve">
    <value>Папярэджанне: “{0}” быў скапіраваны ў “{1}” з памылкамі {2} </value>
  </data>
  <data name="WarningIOErrorWhileCopyingToReason" xml:space="preserve">
    <value>Папярэджанне: памылка ўводу-вываду пры капіраванні файла "{0}" у "{1}": {2}</value>
  </data>
  <data name="WarningSeveralBlocksDontMatchInSIWillBeIgnored" xml:space="preserve">
    <value>Папярэджанне: некалькі блокаў не адпавядаюць захаванай інфармацыі "{0}". Захаваная інфармацыя цалкам ігнаруецца</value>
  </data>
  <data name="WarningWhileCreating" xml:space="preserve">
    <value>Папярэджанне: {0} падчас стварэння файла "{1}"</value>
  </data>
  <data name="WarningWhileDiscoveringIfNeedsToBeRechecked" xml:space="preserve">
    <value>Папярэджанне: {0} пры вызначэнні неабходнасці паўторнай праверкі "{1}". </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>так</value>
  </data>
</root>