<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlockOfAtPositionWillBeCopiedFromNoMatterChecksum" xml:space="preserve">
    <value>Blok van bestand “{0}” op positie {1} wordt gekopieerd van “{2}”, zelfs als uit de controlesom blijkt dat het blok onjuist is</value>
  </data>
  <data name="BlockOfAtPositionWillBeRestoredFrom" xml:space="preserve">
    <value>Blok van bestand “{0}” op positie {1} wordt hersteld vanaf dezelfde positie van bestand “{2}”.</value>
  </data>
  <data name="BlocksOfAndAtPositionNonRecoverableFillDummy" xml:space="preserve">
    <value>De blokken met bestanden “{0}” en “{1}” op positie {2} kunnen niet worden hersteld en zijn gevuld met een dummyblok</value>
  </data>
  <data name="ChecksumOfBlockAtOffsetNotOK" xml:space="preserve">
    <value>{0}: Controlesom van het blok op positie {1} is niet OK</value>
  </data>
  <data name="CopiedFromToReason" xml:space="preserve">
    <value>Kopiëren voltooid: {0} naar {1} {2}</value>
  </data>
  <data name="CouldntUseOutdatedFileForRestoringOther" xml:space="preserve">
    <value>Waarschuwing: bestand '{0}' met jaartal 1975 of eerder kan niet worden gebruikt. Dit geeft aan dat dit een laatste kans was om bestand “{1}” te herstellen.</value>
  </data>
  <data name="DefaultCulture" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="DeletedFileNotPresentIn" xml:space="preserve">
    <value>Bestand “{0}” verwijderd dat niet meer bestaat in “{1}”.</value>
  </data>
  <data name="DeletedFolder" xml:space="preserve">
    <value>Map “{0}” inclusief inhoud verwijderd omdat “{1}” niet meer bestaat</value>
  </data>
  <data name="EncounteredErrorOlderOk" xml:space="preserve">
    <value>Waarschuwing: er is een I/O-fout opgetreden tijdens het kopiëren van bestand “{0}”. Het oudere bestand “{1}” lijkt in orde te zijn</value>
  </data>
  <data name="EncounteredErrorOtherBadToo" xml:space="preserve">
    <value>Waarschuwing: er is een I/O-fout opgetreden tijdens het kopiëren van bestand “{0}”. Ander bestand “{1}” bevat ook fouten of is een product van herstel op de laatste kans. Er wordt geprobeerd '{0}' automatisch te repareren.</value>
  </data>
  <data name="EncounteredErrorWhileCopyingTryingToRepair" xml:space="preserve">
    <value>Waarschuwing: er is een fout opgetreden tijdens het kopiëren van bestand "{0}". Ik zal proberen de fout te herstellen</value>
  </data>
  <data name="ErrorDeleting" xml:space="preserve">
    <value>Fout bij verwijderen van bestand '{0}': {1}</value>
  </data>
  <data name="ErrorProcessinngFilePair" xml:space="preserve">
    <value>Fout bij verwerken bestandspaar “{0}” | “{1}”: {2}</value>
  </data>
  <data name="ErrorReadingPositionWillFillWithDummy" xml:space="preserve">
    <value>Fout bij lezen van bestand '{0}' op positie {1}: {2}. Blok is gevuld met een dummy</value>
  </data>
  <data name="ErrorWhileTestingFile" xml:space="preserve">
    <value>Fout bij het testen van bestand '{0}'</value>
  </data>
  <data name="FileCopied" xml:space="preserve">
    <value>Kopiëren voltooid: {0} naar {1} {2}</value>
  </data>
  <data name="FileHasDifferentTime" xml:space="preserve">
    <value>(Bestand heeft een andere datum of lengte)</value>
  </data>
  <data name="FileHasZeroLength" xml:space="preserve">
    <value>Waarschuwing: het bestand heeft een lengte van nul, wat aangeeft dat er in het verleden een mislukte kopieerbewerking is uitgevoerd: “{0}”</value>
  </data>
  <data name="FileHealthyOrRepaired" xml:space="preserve">
    <value>(Bestand was foutloos of gerepareerd)</value>
  </data>
  <data name="FilesHaveZeroLength" xml:space="preserve">
    <value>Waarschuwing: beide bestanden hebben een lengte van nul, wat aangeeft dat er in het verleden een mislukte kopieerbewerking is uitgevoerd: “{0}” | “{1}” </value>
  </data>
  <data name="FileWasHealthy" xml:space="preserve">
    <value>(Bestand was foutloos)</value>
  </data>
  <data name="FileWasNew" xml:space="preserve">
    <value>(bestand was nieuw)</value>
  </data>
  <data name="FileWasNewer" xml:space="preserve">
    <value>(Bestand was nieuwer of groter) </value>
  </data>
  <data name="FillingNotRecoverableAtOffsetOfCopyWithDummy" xml:space="preserve">
    <value>Het onherstelbare blok op positie {0} van het gekopieerde bestand “{1}” is gevuld met een dummy</value>
  </data>
  <data name="FillingNotRecoverableAtOffsetWithDummy" xml:space="preserve">
    <value>Het onherstelbare blok op positie {0} is gevuld met een dummyblok</value>
  </data>
  <data name="FirstFileHasBadBlocks" xml:space="preserve">
    <value>Waarschuwing: het eerste bestand “{0}” bevat slechte blokken. Het overschrijven van bestand “{1}” is overgeslagen en heeft het als back-up achtergelaten</value>
  </data>
  <data name="FoundFileForSync" xml:space="preserve">
    <value>Een bestand gevonden voor mogelijke synchronisatie</value>
  </data>
  <data name="FoundFilesForSync" xml:space="preserve">
    <value>{0} bestanden gevonden voor mogelijke synchronisatie</value>
  </data>
  <data name="InternalErrorCouldntRestoreAny" xml:space="preserve">
    <value>Interne fout: een kopie van de bestanden "{0}" | "{1}" kon niet worden hersteld</value>
  </data>
  <data name="IOErrorDuringRepairCopyOf" xml:space="preserve">
    <value>I/O-fout tijdens het repareren van kopiëren naar bestand: “{0}”: {1}</value>
  </data>
  <data name="IOErrorReadingFile" xml:space="preserve">
    <value>I/O-fout bij het lezen van bestand ‘{0}’: {1}</value>
  </data>
  <data name="IOErrorReadingFileOffset" xml:space="preserve">
    <value>I/O-fout bij het lezen van bestand: “{0}” op positie {1}: {2}</value>
  </data>
  <data name="IOErrorWhileReadingPositionFillDummyWhileCopy" xml:space="preserve">
    <value>I/O-fout bij het lezen van bestand '{0}' op locatie {1}: {2}. Bij het kopiëren wordt het blok vervangen door een dummy.</value>
  </data>
  <data name="IOErrorWritingFile" xml:space="preserve">
    <value>I/O-fout bij het schrijven van bestand '{0}': {1}</value>
  </data>
  <data name="KeepingReadableButNotRecoverableBlockAtOffset" xml:space="preserve">
    <value>Het leesbare maar onherstelbare blok op positie {0} blijft bestaan. De controlesom geeft aan dat het blok onjuist is</value>
  </data>
  <data name="KeepingReadableNonRecovBBlockAtAlsoInCopy" xml:space="preserve">
    <value>Het leesbare maar onherstelbare blok op positie {0} van het originele bestand “{1}” blijft ook in de kopie “{2}”. De controlesom geeft aan dat het blok onjuist is</value>
  </data>
  <data name="LogFileName" xml:space="preserve">
    <value>Mapsynchronisatie log Nederlands</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Verslag van het kopieerproces</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nee </value>
  </data>
  <data name="OperationCanceled" xml:space="preserve">
    <value>Proces afgebroken</value>
  </data>
  <data name="OperationFinished" xml:space="preserve">
    <value>Proces beëindigd</value>
  </data>
  <data name="OutOfBadBlocksNotRestoredInCopyBytes" xml:space="preserve">
    <value>Van {0} slechte blokken in het originele bestand zijn {2} bytes niet hersteld in de kopie “{1}”.</value>
  </data>
  <data name="ProcessNo" xml:space="preserve">
    <value>№</value>
  </data>
  <data name="RecoveringBlockAtOfCopiedFile" xml:space="preserve">
    <value>Blok op positie {0} van het gekopieerde doelbestand “{1}” is hersteld</value>
  </data>
  <data name="RecoveringBlockAtOffsetOfFile" xml:space="preserve">
    <value>Blok op positie {0} van bestand “{1}” is hersteld.</value>
  </data>
  <data name="RightToLeft" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="RunningWithoutRepairOptionUndecided" xml:space="preserve">
    <value>De synchronisatie wordt uitgevoerd zonder een reparatieoptie en kan daarom niet beslissen of het bestand “{0}” kan worden hersteld met “{1}”.</value>
  </data>
  <data name="SavedInfoFileCantBeUsedForTesting" xml:space="preserve">
    <value>Het opgeslagen infobestand “{0}” kan niet worden gebruikt om het bestand “{1}” te testen: het is gemaakt voor een andere versie van het bestand</value>
  </data>
  <data name="SavedInfoHasBeenDamagedNeedsRecreation" xml:space="preserve">
    <value>Het opgeslagen informatiebestand “{0}” is beschadigd en moet opnieuw worden gemaakt vanaf “{1}”.</value>
  </data>
  <data name="SecondFolderNoDelete" xml:space="preserve">
    <value>Fout: de tweede map bevat het bestand “{0}”. Het lijkt erop dat de geselecteerde map niet geschikt is voor de verwijderoptie. Sla het verwerken van de map en submappen over</value>
  </data>
  <data name="SkippingFilePairDontDelete" xml:space="preserve">
    <value>Bestandspaar “{0}” | “{1}” wordt overgeslagen. Een speciaal bestand verhindert het gebruik van de verwijderoptie in de verkeerde hoofdmap. </value>
  </data>
  <data name="TheFileCantBeModifiedMissingRepairApplyToCopy" xml:space="preserve">
    <value>Het bestand kan niet worden gewijzigd vanwege het ontbreken van een reparatieoptie. Het herstelproces wordt op de kopie toegepast.</value>
  </data>
  <data name="ThereAreBadBlocksInFileNonRestorableParts" xml:space="preserve">
    <value>Er zijn {0} slechte blokken in bestand “{1}”, onherstelbare delen: {2} bytes. </value>
  </data>
  <data name="ThereAreBadBlocksInNonRestorableMayRetryLater" xml:space="preserve">
    <value>Er zijn {0} slechte blokken in bestand “{1}”, onherstelbare delen: {2} bytes. Het proces kan niet doorgaan vanwege onherstelbaarheid.  Het kan later opnieuw worden geprobeerd.</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableCantBeBackup" xml:space="preserve">
    <value>Er zijn {0} slechte blokken in bestand “{1}”, onherstelbare delen: {2} bytes, bestand kan niet als back-up worden gebruikt</value>
  </data>
  <data name="ThereAreBadBlocksNonRestorableOnlyTested" xml:space="preserve">
    <value>Er zijn {0} slechte blokken in bestand “{1}”, onherstelbare delen: {2} bytes. Bestand blijft ongewijzigd, het is zojuist getest</value>
  </data>
  <data name="ThereIsBadBlockInFileNonRestorableParts" xml:space="preserve">
    <value>Er is een slecht blok in bestand “{0}”, onherstelbare delen: {1} bytes.</value>
  </data>
  <data name="ThereIsBadBlockNonRestorableCantBeBackup" xml:space="preserve">
    <value>Er is een slecht blok in bestand “{0}” dat niet kan worden hersteld: {1} bytes, bestand kan niet worden gebruikt als back-up </value>
  </data>
  <data name="ThereIsOneBadBlockNonRestorableOnlyTested" xml:space="preserve">
    <value>Er zit een slecht blok in het bestand “{0}”, onherstelbare delen: {1} bytes, het bestand blijft ongewijzigd, het is zojuist getest</value>
  </data>
  <data name="ThereRemainBadBlocksInBecauseReadOnly" xml:space="preserve">
    <value>{0} slechte blokken blijven in “{1}” omdat het bestand niet kan worden gewijzigd </value>
  </data>
  <data name="ThereWasBadBlockInFileNotRestoredParts" xml:space="preserve">
    <value>Er was een slecht blok in bestand “{0}”, niet-herstelde delen: {1} bytes</value>
  </data>
  <data name="ThereWasBadBlockNotRestoredInCopyBytes" xml:space="preserve">
    <value>Er zat een slecht blok in het originele bestand, niet-herstelde delen in de kopie “{0}”: {1} bytes.</value>
  </data>
  <data name="ThereWereBadBlocksInFileNotRestoredParts" xml:space="preserve">
    <value>Er waren {0} slechte blokken in bestand “{1}”, niet-herstelde delen: {2} bytes</value>
  </data>
  <data name="ThisIsASimulatedIOErrorAtPosition" xml:space="preserve">
    <value>Dit is een gesimuleerde I/O-fout op locatie {0}</value>
  </data>
  <data name="WarningChecksumOffsetPrimarySavedInfoIgnored" xml:space="preserve">
    <value>Waarschuwing: de controlesom van het blok op positie {0} komt niet overeen met de beschikbare primaire blokken met opgeslagen informatie “{1}”. De primair opgeslagen informatie voor het blok wordt genegeerd</value>
  </data>
  <data name="WarningChecksumOffsetSecondarySavedInfoIgnored" xml:space="preserve">
    <value>Waarschuwing: de controlesom van het blok op positie {0} komt niet overeen met de beschikbare secundaire blokken met opgeslagen informatie “{1}”. Secundair opgeslagen informatie voor het blok wordt genegeerd</value>
  </data>
  <data name="WarningCopiedToWithErrors" xml:space="preserve">
    <value>Waarschuwing: '{0}' is gekopieerd naar '{1}' met fouten {2} </value>
  </data>
  <data name="WarningIOErrorWhileCopyingToReason" xml:space="preserve">
    <value>Waarschuwing: I/O-fout tijdens het kopiëren van bestand “{0}” naar “{1}”: {2}</value>
  </data>
  <data name="WarningSeveralBlocksDontMatchInSIWillBeIgnored" xml:space="preserve">
    <value>Waarschuwing: meerdere blokken komen niet overeen met opgeslagen informatie “{0}”. De opgeslagen informatie wordt volledig genegeerd</value>
  </data>
  <data name="WarningWhileCreating" xml:space="preserve">
    <value>Waarschuwing: {0} tijdens het maken van bestand '{1}'</value>
  </data>
  <data name="WarningWhileDiscoveringIfNeedsToBeRechecked" xml:space="preserve">
    <value>Waarschuwing: {0} tijdens het bepalen of “{1}” opnieuw moet worden gecontroleerd. </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja </value>
  </data>
</root>